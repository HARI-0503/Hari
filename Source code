import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, accuracy_score

# Step 1: Load dataset
# Assuming the dataset has 'text' and 'label' columns (label = 'FAKE' or 'REAL')
df = pd.read_csv('news.csv')  # Replace with your dataset path
df = df[['text', 'label']]

# Step 2: Preprocess data
X = df['text']
y = df['label']

# Step 3: Split the data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 4: Vectorize text using TF-IDF
vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

# Step 5: Train Logistic Regression model
model = LogisticRegression()
model.fit(X_train_tfidf, y_train)

# Step 6: Make predictions
y_pred = model.predict(X_test_tfidf)

# Step 7: Evaluate model
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))

# Step 8: Test on custom input
def predict_news(text):
    tfidf_text = vectorizer.transform([text])
    prediction = model.predict(tfidf_text)
    return prediction[0]

# Example
sample_text = "The government has launched a new education reform program."
print("Prediction for sample text:", predict_news(sample_text))
